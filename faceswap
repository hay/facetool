#!/usr/bin/env python3
from lib.faceswap import Faceswap
from glob import glob
from os.path import splitext, basename
import sys
import argparse
import logging

logger = logging.getLogger(__name__)

parser = argparse.ArgumentParser(description = "Displays the features of face on head")
parser.add_argument('head', type = str, nargs='?')
parser.add_argument('face', type = str, nargs='?')
parser.add_argument('-pp', '--predictor-path', type = str, default = "./landmarks.dat")
parser.add_argument('-o', '--output', type = str, default = "out.jpg")
parser.add_argument('-id', '--indirectory', type = str)
parser.add_argument('-od', '--outdirectory', type = str)
parser.add_argument('-s', '--swap', action="store_true", help = "Swap head and face parameters")
parser.add_argument('-v', '--verbose', action="store_true")
args = parser.parse_args()

if args.verbose:
    logging.basicConfig(level=logging.DEBUG)

if args.swap:
    args.head, args.face = args.face, args.head

swapper = Faceswap(predictor_path = args.predictor_path, verbose = args.verbose)

if args.indirectory and args.head and args.outdirectory:
    inpath = f"{args.indirectory}/*"

    for path in glob(inpath):
        base = splitext(basename(path))[0]
        outpath = f"{args.outdirectory}/{base}.jpg"
        logger.debug(f"Processing {path} -> {outpath}")

        try:
            swapper.faceswap(head = path, face = args.head, output = outpath)
        except:
            logger.error("Couldn't convert this face")
elif args.head and args.face:
    swapper.faceswap(head = args.head, face = args.face, output = args.output)
else:
    parser.print_help()